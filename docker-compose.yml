version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: wordpress-ai-builder
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/wordpress_ai_builder
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    networks:
      - wordpress-ai-network

  db:
    image: postgres:16-alpine
    container_name: wordpress-ai-db
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=wordpress_ai_builder
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wordpress-ai-network

  redis:
    image: redis:7-alpine
    container_name: wordpress-ai-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - wordpress-ai-network

  # Backend API with Agno Framework
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wordpress-ai-backend
    ports:
      - '8000:8000'
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/wordpress_ai_builder
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      # AI Provider API keys (set these in .env file)
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    networks:
      - wordpress-ai-network

  adminer:
    image: adminer
    container_name: wordpress-ai-adminer
    ports:
      - '8080:8080'
    depends_on:
      - db
    networks:
      - wordpress-ai-network

volumes:
  postgres_data:
  redis_data:

networks:
  wordpress-ai-network:
    driver: bridge
