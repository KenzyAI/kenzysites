version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: wordpress-ai-builder
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/wordpress_ai_builder
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    networks:
      - wordpress-ai-network

  db:
    image: postgres:16-alpine
    container_name: wordpress-ai-db
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=wordpress_ai_builder
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wordpress-ai-network

  redis:
    image: redis:7-alpine
    container_name: wordpress-ai-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - wordpress-ai-network

  # Backend API with Agno Framework
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wordpress-ai-backend
    ports:
      - '8000:8000'
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/wordpress_ai_builder
      - REDIS_URL=redis://redis:6379/0
      # AI Provider API keys (set these in .env file)
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    networks:
      - wordpress-ai-network

  adminer:
    image: adminer
    container_name: wordpress-ai-adminer
    ports:
      - '8082:8080'
    depends_on:
      - db
      - wordpress-db
    networks:
      - wordpress-ai-network

  # WordPress Local Development
  wordpress:
    image: wordpress:latest
    container_name: kenzysites-wordpress
    ports:
      - '8085:80'
    environment:
      WORDPRESS_DB_HOST: wordpress-db:3306
      WORDPRESS_DB_NAME: wordpress_local
      WORDPRESS_DB_USER: wp_user
      WORDPRESS_DB_PASSWORD: wp_pass
      WORDPRESS_DEBUG: 'true'
    volumes:
      - wordpress_data:/var/www/html
      - ./wordpress-plugin/kenzysites-converter:/var/www/html/wp-content/plugins/kenzysites-converter
      - ./wordpress/uploads:/var/www/html/wp-content/uploads
      - ./wordpress/themes:/var/www/html/wp-content/themes
    depends_on:
      - wordpress-db
    networks:
      - wordpress-ai-network

  # WordPress Database
  wordpress-db:
    image: mysql:8.0
    container_name: kenzysites-wordpress-db
    ports:
      - '3307:3306'
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: wordpress_local
      MYSQL_USER: wp_user
      MYSQL_PASSWORD: wp_pass
    volumes:
      - wordpress_db_data:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - wordpress-ai-network

  # phpMyAdmin for WordPress DB management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: kenzysites-phpmyadmin
    ports:
      - '8081:80'
    environment:
      PMA_HOSTS: wordpress-db,db
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 100M
    depends_on:
      - wordpress-db
    networks:
      - wordpress-ai-network

volumes:
  postgres_data:
  redis_data:
  wordpress_data:
  wordpress_db_data:

networks:
  wordpress-ai-network:
    driver: bridge
